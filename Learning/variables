* Variables are Containers for Storing Data
* JavaScript Variables can be declared in 4 ways:

   Automatically
   Using var
   Using let
   Using const

When to Use var, let, or const?

1. Always declare variables
2. Always use const if the value should not be changed
3. Always use const if the type should not be changed (Arrays and Objects)
4. Only use let if you can't use const
    The let keyword was introduced in ES6 (2015)
    Variables declared with let have Block Scope
    Variables declared with let must be Declared before use
    Variables declared with let cannot be Redeclared in the same scope
5. Only use var if you MUST support old browsers.

let and const have block scope.
let and const can not be redeclared.
let and const must be declared before use.

    let x = 5;
    let y = 6;
    let z = x + y;

    const x = 5;
    const y = 6;
    const z = x + y;

    const price1 = 5;
    const price2 = 6;
    let total = price1 + price2;



Types of JavaScript Operators
There are different types of JavaScript operators:

Arithmetic Operators
    let a = 3;
    let x = (100 + 50) * a;
Assignment Operators
    let x = 10;
    x += 5;
Comparison Operators
    let text1 = "A";
    let text2 = "B";
    let result = text1 < text2;
String Operators
    let text1 = "John";
    let text2 = "Doe";
    let text3 = text1 + " " + text2;
Logical Operators
Bitwise Operators
Ternary Operators
Type Operators

JavaScript has 8 Datatypes
    String
    Number
    Bigint
    Boolean
    Undefined
    Null
    Symbol
    Object

The Object Datatype
    The object data type can contain both built-in objects, and user defined objects:
Built-in object types can be
    objects, arrays, dates, maps, sets, intarrays, floatarrays, promises, and more.


JavaScript Type Conversion
    Converting Strings to Numbers
        The global method Number() converts a variable (or a value) into a number.
        Number("3.14")
        Number(Math.PI)
        Number(" ")
        Number("")
    Converting Dates to Numbers
        d = new Date();
        Number(d)          // returns 1404568027739
        d = new Date();
        d.getTime()        // returns 1404568027739
        Date().toString()  // returns "Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)"

    Converting Booleans to Numbers
        Number(false)     // returns 0
        Number(true)      // returns 1

    Converting Booleans to Strings
        String(false)      // returns "false"
        String(true)       // returns "true"
        false.toString()   // returns "false"
        true.toString()    // returns "true"

    Automatic Type Conversion
        5 + null    // returns 5         because null is converted to 0
        "5" + null  // returns "5null"   because null is converted to "null"
        "5" + 2     // returns "52"      because 2 is converted to "2"
        "5" - 2     // returns 3         because "5" is converted to 5
        "5" * "2"   // returns 10        because "5" and "2" are converted to 5 and 2

    Automatic String Conversion
        document.getElementById("demo").innerHTML = myVar;

        // if myVar = {name:"Fjohn"}  // toString converts to "[object Object]"
        // if myVar = [1,2,3,4]       // toString converts to "1,2,3,4"
        // if myVar = new Date()      // toString converts to "Fri Jul 18 2014 09:08:55 GMT+0200
        // if myVar = 123             // toString converts to "123"
        // if myVar = true            // toString converts to "true"
        // if myVar = false           // toString converts to "false"